/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
          &kp ESC         &kp N1  &kp N2        &kp N3     &kp N4  &kp N5       &kp N6    &kp N7         &kp N8     &kp N9         &kp N0    &kp RIGHT_BRACKET
&kp LGUI  &kp TAB         &kp Q   &kp W         &kp E      &kp R   &kp T        &kp Y     &kp U          &kp I      &kp O          &kp P     &kp LBKT           &kp LGUI
          &kp LEFT_SHIFT  &kp A   &kp S         &kp D      &kp F   &kp G        &kp H     &kp J          &kp K      &kp L          &kp SEMI  &kp SINGLE_QUOTE
          &kp LCTRL       &kp Z   &kp X         &kp C      &kp V   &kp B        &kp N     &kp M          &kp COMMA  &kp DOT        &kp FSLH  &mo 2
                                  &kp LEFT_ALT  &kp SPACE  &mo 1   &kp ENTER    &kp CAPS  &kp LG(SPACE)  &kp SPACE  &kp BACKSPACE
            >;
        };

        arrows_and_fs_layer {
            bindings = <
        &mo 3   &kp F1           &kp F2  &kp F3         &kp F4          &kp F5       &kp F6     &kp F7          &kp F8          &kp F9           &kp F10          &kp F11
&trans  &trans  &kp PRINTSCREEN  &trans  &kp BACKSLASH  &kp PIPE        &kp PLUS     &kp EQUAL  &kp HOME        &kp UP_ARROW    &kp END          &kp PRINTSCREEN  &kp F12  &trans
        &trans  &trans           &trans  &trans         &kp UNDERSCORE  &kp MINUS    &kp DOT    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans           &trans
        &trans  &trans           &trans  &trans         &kp GRAVE       &kp TILDE    &kp SLASH  &kp PG_UP       &kp INSERT      &kp PG_DN        &trans           &trans
                                 &trans  &trans         &trans          &trans       &trans     &trans          &trans          &kp DELETE
            >;
        };

        num_layer {
            bindings = <
        &kp ESCAPE  &kp KP_NUM       &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans     &trans          &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT
&trans  &trans      &kp KP_SLASH     &kp KP_N7             &kp KP_N8             &kp KP_N9  &kp KP_PLUS     &trans      &kp HOME           &kp UP           &kp END     &kp PRINTSCREEN   &trans      &trans
        &trans      &kp KP_MULTIPLY  &kp KP_N4             &kp KP_N5             &kp KP_N6  &kp KP_MINUS    &trans      &kp LEFT           &kp DOWN         &kp RIGHT   &trans            &trans
        &trans      &kp KP_N0        &kp KP_N1             &kp KP_N2             &kp KP_N3  &kp KP_DOT      &trans      &kp PG_UP          &kp INSERT       &kp PG_DN   &trans            &trans
                                     &trans                &trans                &trans     &trans          &trans      &trans             &trans           &kp DELETE
            >;
        };

        bt_layer {
            bindings = <
       &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none     &none  &none  &none  &none  &none
&none  &none  &none         &none         &none         &none         &bootloader     &none     &none  &none  &none  &none  &none  &none
       &none  &none         &none         &none         &none         &none           &none     &none  &none  &none  &none  &none
       &none  &none         &none         &none         &none         &sys_reset      &kp LWIN  &none  &none  &none  &none  &none
                            &none         &none         &none         &bt BT_CLR      &none     &none  &to 0  &to 4
            >;
        };

        MacOS_Layer {
            bindings = <
           &kp ESC    &kp N1  &kp N2    &kp N3     &kp N4  &kp N5     &kp N6         &kp N7    &kp N8     &kp N9    &kp N0    &kp RBKT
&kp LCTRL  &kp TAB    &kp Q   &kp W     &kp E      &kp R   &kp T      &kp Y          &kp U     &kp I      &kp O     &kp P     &kp LBKT  &kp RCTRL
           &kp LSHFT  &kp A   &kp S     &kp D      &kp F   &kp G      &kp H          &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
           &kp LALT   &kp Z   &kp X     &kp C      &kp V   &kp B      &kp N          &kp M     &kp COMMA  &kp DOT   &kp FSLH  &mo 2
                              &kp LGUI  &kp SPACE  &mo 1   &kp RET    &kp LG(SPACE)  &kp CAPS  &kp SPACE  &kp BSPC
            >;
        };
    };
};
